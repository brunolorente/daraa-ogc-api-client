{
    "openapi": "3.0.3",
    "info": {
        "title": "Daraa",
        "description": "This data store is offered by CubeWerx Inc. as a demonstration of its in-progress OGC API implementation.",
        "contact": {
            "name": "Mike Galluchon",
            "email": "mgalluch@cubewerx.com"
        },
        "version": "9.3.45"
    },
    "servers": [
        {
            "url": "https://test.cubewerx.com/cubewerx/cubeserv/demo/ogcapi/Daraa",
            "description": "OGC API for the \"Daraa\" data store"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Landing Page"
                ],
                "summary": "The OGC API landing page for this data store.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/landingPage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/conformance": {
            "get": {
                "tags": [
                    "Conformance Classes"
                ],
                "summary": "The set of OGC API conformance classes that are supported for this data store.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/conformance"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "The set of collections available in this data store.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to present in the response document.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "default": 20
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-based index within the result set from which the server will begin presenting results in the response document.  If offset is greater or equal to the number of items in the result set, the server will return an empty list.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "$ref": "#/components/parameters/bbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/collections"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "A collection available in this data store.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/collection"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/themes": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "The set of collections available in this data store, organized into a theme hierarchy (see OGC 18-045, section A.6).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/bbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Experimental.  If \"full\", the complete collection objects are returned.  If \"refsOnly\", only references to the collections are returned.  If \"idsOnly\", only the collection IDs are returned.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "full",
                                "refsOnly",
                                "idsOnly"
                            ],
                            "default": "idsOnly"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/themes"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/schema": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "The schema of one or more collections.",
                "parameters": [
                    {
                        "name": "collections",
                        "in": "query",
                        "description": "A comma-separated list of collection identifiers.  If omitted, the schema of all of the relevant collections will be returned.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "AgricultureSrf",
                                    "CulturePnt",
                                    "CultureSrf",
                                    "Daraa_DTED",
                                    "Daraa_mosaic_2019",
                                    "FacilityPnt",
                                    "HydrographyCrv",
                                    "HydrographySrf",
                                    "MilitarySrf",
                                    "SettlementSrf",
                                    "StructurePnt",
                                    "TransportationGroundCrv",
                                    "UtilityInfrastructureCrv",
                                    "UtilityInfrastructurePnt",
                                    "VegetationSrf"
                                ]
                            },
                            "minItems": 1
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/schema"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/schema": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "The schema of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonXmlHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/schema"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/items": {
            "get": {
                "summary": "This operation retreives features from the specified collection",
                "description": "GetItems operation",
                "operationId": "getFeatures",
                "tags": [
                    "Vector Features And Catalogue Records"
                ],
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "Name of a feature collection offered by the service",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        },
                        "style": "simple",
                        "explode": false
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A MIME type indicating the representation of the resources to be presented (e.g. application/gml+xml; version=3.2 for GML 3.2).",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/gml+xml",
                                "GML",
                                "application/x-bxfs+xml; version=1.0.0",
                                "application/x-bxfs+xml; version=0.0.3",
                                "text/xml; subtype=bxfs/0.0.3",
                                "text/xml; subtype=bxfs/1.0.0",
                                "GML0",
                                "BXFS",
                                "GML.1",
                                "GML1",
                                "application/gml+xml; version=2.1",
                                "application/gml+xml; version=2.1.2",
                                "text/xml; subtype=gml/2.1",
                                "text/xml; subtype=gml/2.1.2",
                                "GML2",
                                "application/gml+xml; version=3.1",
                                "application/gml+xml; version=3.1.1",
                                "text/xml; subtype=gml/3.1",
                                "text/xml; subtype=gml/3.1.1",
                                "GML3",
                                "text/xml; subType=gml/3.1.1/profiles/gmlsf/1.0.0/0",
                                "application/gml+xml; version=3.1.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.1.1; profile=gmlsf0",
                                "application/gml+xml; version=3.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.1; profile=gmlsf0",
                                "GML3L0",
                                "text/xml; subType=gml/3.1.1/profiles/gmlsf/1.0.0/1",
                                "application/gml+xml; version=3.1.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.1.1; profile=gmlsf1",
                                "application/gml+xml; version=3.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.1; profile=gmlsf1",
                                "GML3L1",
                                "application/gml+xml; version=3.2",
                                "text/xml; subtype=gml/3.2",
                                "GML32",
                                "text/xml; subType=gml/3.2/profiles/gmlsf/1.0.0/0",
                                "application/gml+xml; version=3.2; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.2; profile=gmlsf0",
                                "GML32L0",
                                "text/xml; subType=gml/3.2/profiles/gmlsf/1.0.0/1",
                                "application/gml+xml; version=3.2; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.2; profile=gmlsf1",
                                "GML32L1",
                                "application/rss+xml",
                                "RSS",
                                "application/atom+xml",
                                "ATOM",
                                "application/vnd.google-earth.kml+xml",
                                "KML",
                                "application/vnd.google-earth.kmz",
                                "KMZ",
                                "text/html",
                                "HTML",
                                "HTMLTAB",
                                "HTMLETAB",
                                "HTMLDIV",
                                "HTMLEDIV",
                                "application/geo+json",
                                "geojson",
                                "application/json",
                                "application/vnd.geo+json",
                                "application/ofgj+json",
                                "ogcjson",
                                "application/ogc+json",
                                "application/vnd.shp+octet-stream",
                                "SHAPE",
                                "text/json",
                                "json",
                                "text/xml",
                                "XML"
                            ]
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The optional limit parameter limits the number of items that are presented in the response document.  Only items are counted that are on the first level of the collection in\nthe response document. Nested objects contained within the explicitly requested items shall not be counted.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 10
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (elevation or depth): * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Lower left corner, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Upper right corner, coordinate axis 3 (optional) The coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "maxItems": 4,
                            "minItems": 4,
                            "items": {
                                "maximum": 180,
                                "minimum": 180,
                                "type": "integer"
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "description": "Temporal constraint to be applied to a query; may be a time instance or a temporal period as per ISO8601.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "tRelation",
                        "in": "query",
                        "description": "Temporal operator to use for temporal contstraint",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TEquals",
                                "AnyInteracts",
                                "After",
                                "Before",
                                "Begins",
                                "BegunBy",
                                "TContains",
                                "During",
                                "EndedBy",
                                "Ends",
                                "Meets",
                                "MetBy",
                                "TOverlaps",
                                "OverlappedBy"
                            ]
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "resultType",
                        "in": "query",
                        "description": "The possible values for this parameter are \"results\" and \"hits\". If the value of the resultType parameter is set to \"results\" the server shall generate a complete response document containing resources that satisfy the operation. The root element of the response container shall include a count of the number of resources actually presented in the response document. The root element of the response container shall also include a count of the total number of resources that the operations actually found which will always be equal to or greater than the number of resource presented in the response document. If the value of the resultType attribute is set to \"hits\" the server shall generate an empty response document containing no resource instances and the root element of the response container shall contain the count of the total number of resources that the operation found. The value for the number of resources presented in the response document shall be set to zero.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hits",
                                "results"
                            ],
                            "default": "results"
                        },
                        "style": "form",
                        "explode": true,
                        "example": "hits"
                    },
                    {
                        "name": "propertyName",
                        "in": "query",
                        "description": "A list of feature properties to include in the response.  For some output formats, such as XML that can be validate against a formal schema, this list represents the optional properties to include in the response.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "coordPrecision",
                        "in": "query",
                        "description": "Number of digits after the decimal point to use when presenting result in a text-base output format such as XML or JSON",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "css",
                        "in": "query",
                        "description": "A reference to a CSS to be applied to HTML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "xslt",
                        "in": "query",
                        "description": "A reference to a XSLT to be applied to XML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "kmlStyleURL",
                        "in": "query",
                        "description": "A reference to a KML style shere to be applied to KML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "maxBytes",
                        "in": "query",
                        "description": "The maximum number of bytes to be presented in one page of a query response.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "resolution",
                        "in": "query",
                        "description": "Specifies the resolution of a display port in the event that the WFS output is intended for display; the server attempts to simplify each output geometry by removing unnecessary verticies and this triming the size of the response.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "responseHandler",
                        "in": "query",
                        "description": "Tiggers asynchronous processing of the request; notification is sent to the endpoint specified as the value of the parameter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "crs",
                        "in": "query",
                        "description": "Asserts the CRS to use for encoding features in the response document.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true,
                        "example": "http://www.opengis.net/def/crs/epsg/0/4326"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "A query filter specified is some predicate encoding language supported by the server",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "filter_language",
                        "in": "query",
                        "description": "An identifier indicating the predicate language used to express the value of the \"filter\" parameter",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A space seperated list of search terms to be applied to text fields in a feature.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "geometry",
                        "in": "query",
                        "description": "The geometry of an area of interest specified using WKT.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "wkt"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "geometry_crs",
                        "in": "query",
                        "description": "The CRS used to encode the coordinates of the \"geometry\" parameter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "relation",
                        "in": "query",
                        "description": "The spatial operator to apply when testing a feature's geometry against the area of interest encoded using the \"geometry\" parameter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Interests",
                                "Equals",
                                "Disjoint",
                                "Touches",
                                "Within",
                                "Overlaps",
                                "Crosses",
                                "Contains"
                            ]
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "The latitude of the center point of a proximity search.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "The longitude of the center point of a proximity search.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The search radius in meters of a proximity search.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response",
                        "content": {
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/geo+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/gml+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/x-bxfs+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/rss+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/atom+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/vnd.google-earth.kml+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/vnd.google-earth.kmz": {
                                "schema": {
                                    "format": "binary"
                                }
                            },
                            "application/vnd.shp+octet-stream": {
                                "schema": {
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/items/{featureId}": {
            "get": {
                "summary": "This operation retreives the specified feature from the specified collection",
                "description": "GetItem operation",
                "operationId": "getFeature",
                "tags": [
                    "Vector Features And Catalogue Records"
                ],
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "Name of a feature collection offered by the service",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        },
                        "style": "simple",
                        "explode": false
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "Locate identifier for a specific feature",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A MIME type indicating the representation of the resources to be presented (e.g. application/gml+xml; version=3.2 for GML 3.2).",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/gml+xml",
                                "GML",
                                "application/x-bxfs+xml; version=1.0.0",
                                "application/x-bxfs+xml; version=0.0.3",
                                "text/xml; subtype=bxfs/0.0.3",
                                "text/xml; subtype=bxfs/1.0.0",
                                "GML0",
                                "BXFS",
                                "GML.1",
                                "GML1",
                                "application/gml+xml; version=2.1",
                                "application/gml+xml; version=2.1.2",
                                "text/xml; subtype=gml/2.1",
                                "text/xml; subtype=gml/2.1.2",
                                "GML2",
                                "application/gml+xml; version=3.1",
                                "application/gml+xml; version=3.1.1",
                                "text/xml; subtype=gml/3.1",
                                "text/xml; subtype=gml/3.1.1",
                                "GML3",
                                "text/xml; subType=gml/3.1.1/profiles/gmlsf/1.0.0/0",
                                "application/gml+xml; version=3.1.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.1.1; profile=gmlsf0",
                                "application/gml+xml; version=3.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.1; profile=gmlsf0",
                                "GML3L0",
                                "text/xml; subType=gml/3.1.1/profiles/gmlsf/1.0.0/1",
                                "application/gml+xml; version=3.1.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.1.1; profile=gmlsf1",
                                "application/gml+xml; version=3.1; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.1; profile=gmlsf1",
                                "GML3L1",
                                "application/gml+xml; version=3.2",
                                "text/xml; subtype=gml/3.2",
                                "GML32",
                                "text/xml; subType=gml/3.2/profiles/gmlsf/1.0.0/0",
                                "application/gml+xml; version=3.2; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf0",
                                "application/gml+xml; version=3.2; profile=gmlsf0",
                                "GML32L0",
                                "text/xml; subType=gml/3.2/profiles/gmlsf/1.0.0/1",
                                "application/gml+xml; version=3.2; profile=http://www.opengis.net/def/profile/ogc/2.0/gml-sf1",
                                "application/gml+xml; version=3.2; profile=gmlsf1",
                                "GML32L1",
                                "application/rss+xml",
                                "RSS",
                                "application/atom+xml",
                                "ATOM",
                                "application/vnd.google-earth.kml+xml",
                                "KML",
                                "application/vnd.google-earth.kmz",
                                "KMZ",
                                "text/html",
                                "HTML",
                                "HTMLTAB",
                                "HTMLETAB",
                                "HTMLDIV",
                                "HTMLEDIV",
                                "application/geo+json",
                                "geojson",
                                "application/json",
                                "application/vnd.geo+json",
                                "application/ofgj+json",
                                "ogcjson",
                                "application/ogc+json",
                                "application/vnd.shp+octet-stream",
                                "SHAPE",
                                "text/json",
                                "json",
                                "text/xml",
                                "XML"
                            ]
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "resultType",
                        "in": "query",
                        "description": "The possible values for this parameter are \"results\" and \"hits\". If the value of the resultType parameter is set to \"results\" the server shall generate a complete response document containing resources that satisfy the operation. The root element of the response container shall include a count of the number of resources actually presented in the response document. The root element of the response container shall also include a count of the total number of resources that the operations actually found which will always be equal to or greater than the number of resource presented in the response document. If the value of the resultType attribute is set to \"hits\" the server shall generate an empty response document containing no resource instances and the root element of the response container shall contain the count of the total number of resources that the operation found. The value for the number of resources presented in the response document shall be set to zero.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hits",
                                "results"
                            ],
                            "default": "results"
                        },
                        "style": "form",
                        "explode": true,
                        "example": "hits"
                    },
                    {
                        "name": "propertyName",
                        "in": "query",
                        "description": "A list of feature properties to include in the response.  For some output formats, such as XML that can be validate against a formal schema, this list represents the optional properties to include in the response.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "coordPrecision",
                        "in": "query",
                        "description": "Number of digits after the decimal point to use when presenting result in a text-base output format such as XML or JSON",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "css",
                        "in": "query",
                        "description": "A reference to a CSS to be applied to HTML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "xslt",
                        "in": "query",
                        "description": "A reference to a XSLT to be applied to XML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "kmlStyleURL",
                        "in": "query",
                        "description": "A reference to a KML style shere to be applied to KML-based output formats; ignored otherwise",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "resolution",
                        "in": "query",
                        "description": "Specifies the resolution of a display port in the event that the WFS output is intended for display; the server attempts to simplify each output geometry by removing unnecessary verticies and this triming the size of the response.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "responseHandler",
                        "in": "query",
                        "description": "Tiggers asynchronous processing of the request; notification is sent to the endpoint specified as the value of the parameter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "crs",
                        "in": "query",
                        "description": "Asserts the CRS to use for encoding features in the response document.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "style": "form",
                        "explode": true,
                        "example": "http://www.opengis.net/def/crs/epsg/0/4326"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response",
                        "content": {
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/geo+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/gml+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/x-bxfs+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/rss+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/atom+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/vnd.google-earth.kml+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/vnd.google-earth.kmz": {
                                "schema": {
                                    "format": "binary"
                                }
                            },
                            "application/vnd.shp+octet-stream": {
                                "schema": {
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/coverage": {
            "get": {
                "tags": [
                    "Coverages"
                ],
                "summary": "The coverage of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Daraa_DTED",
                                "Daraa_mosaic_2019"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/subset"
                    },
                    {
                        "$ref": "#/components/parameters/scale-factor"
                    },
                    {
                        "$ref": "#/components/parameters/scale-axes"
                    },
                    {
                        "$ref": "#/components/parameters/scale-size"
                    },
                    {
                        "$ref": "#/components/parameters/scale-extent"
                    },
                    {
                        "$ref": "#/components/parameters/coverageBbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/coverageWidth"
                    },
                    {
                        "$ref": "#/components/parameters/coverageHeight"
                    },
                    {
                        "$ref": "#/components/parameters/transform"
                    },
                    {
                        "$ref": "#/components/parameters/alphaChannel"
                    },
                    {
                        "$ref": "#/components/parameters/responseHandler"
                    },
                    {
                        "$ref": "#/components/parameters/f-geotiffHtml"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/coverage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/coverage/domainset": {
            "get": {
                "tags": [
                    "Coverages"
                ],
                "summary": "The domain set of the coverage of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Daraa_DTED",
                                "Daraa_mosaic_2019"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/subset"
                    },
                    {
                        "$ref": "#/components/parameters/scale-factor"
                    },
                    {
                        "$ref": "#/components/parameters/scale-axes"
                    },
                    {
                        "$ref": "#/components/parameters/scale-size"
                    },
                    {
                        "$ref": "#/components/parameters/scale-extent"
                    },
                    {
                        "$ref": "#/components/parameters/coverageBbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/coverageWidth"
                    },
                    {
                        "$ref": "#/components/parameters/coverageHeight"
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/domainSet"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/coverage/rangetype": {
            "get": {
                "tags": [
                    "Coverages"
                ],
                "summary": "The range type of the coverage of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Daraa_DTED",
                                "Daraa_mosaic_2019"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/subset"
                    },
                    {
                        "$ref": "#/components/parameters/scale-factor"
                    },
                    {
                        "$ref": "#/components/parameters/scale-axes"
                    },
                    {
                        "$ref": "#/components/parameters/scale-size"
                    },
                    {
                        "$ref": "#/components/parameters/scale-extent"
                    },
                    {
                        "$ref": "#/components/parameters/coverageBbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/coverageWidth"
                    },
                    {
                        "$ref": "#/components/parameters/coverageHeight"
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/rangeType"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/images": {
            "get": {
                "tags": [
                    "Source Images"
                ],
                "summary": "The set of source images of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Daraa_DTED",
                                "Daraa_mosaic_2019"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to present in the response document.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "default": 20
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-based index within the result set from which the server will begin presenting results in the response document.  If offset is greater or equal to the number of items in the result set, the server will return an empty list.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "$ref": "#/components/parameters/bbox"
                    },
                    {
                        "$ref": "#/components/parameters/bbox-crs"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "$ref": "#/components/parameters/f-stacHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/sourceImages"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/images/{imageId}": {
            "get": {
                "tags": [
                    "Source Images"
                ],
                "summary": "Metadata about a source image of a collection, including links to the actual source image file(s).",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Daraa_DTED",
                                "Daraa_mosaic_2019"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/imageId"
                    },
                    {
                        "$ref": "#/components/parameters/f-stacHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/sourceImage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/styles": {
            "get": {
                "tags": [
                    "Styles"
                ],
                "summary": "The set of styles available in this data store.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f-jsonSldHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/styles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            },
            "post": {
                "tags": [
                    "Styles"
                ],
                "summary": "Add a new style to this data store, or just validate a style.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/validateStylePost"
                    }
                ],
                "requestBody": {
                    "description": "The definition of an OGG-API style.  There are two ways of representing such a style in SLD.  The first is by using a SymLayerSet with one or more NamedLayers, each of which defines exactly one UserStyle (whose name is the ID of the style being defined), each of which has exactly one FeatureTypeStyle (whose FeatureTypeName is implicitly or explicitly the same as that of the NamedLayer).  The second is by using a UserStyle (as a top-level element) with one or more FeatureTypeStyles, each of which explicitly specifies a FeatureTypeName indicating the collection that that FeatureTypeStyle is for.  Either way, the style must not already exist, and all referenced collections must exist and be of a compatible type.",
                    "content": {
                        "application/vnd.ogc.sld+xml; version=1.1": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/vnd.ogc.sld+xml; version=1.0": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "204": {
                        "description": "The resource has been validated."
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/styles/{styleId}": {
            "get": {
                "tags": [
                    "Styles"
                ],
                "summary": "A style in this data store.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-style"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/style"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            },
            "put": {
                "tags": [
                    "Styles"
                ],
                "summary": "Add a new style to this data store, redefine an existing style, or just validate a style.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a (new or existing) style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/validateStylePost"
                    }
                ],
                "requestBody": {
                    "description": "The definition of an OGG-API style.  There are two ways of representing such a style in SLD.  The first is by using a SymLayerSet with one or more NamedLayers, each of which defines exactly one UserStyle (whose name is the ID of the style being defined), each of which has exactly one FeatureTypeStyle (whose FeatureTypeName is implicitly or explicitly the same as that of the NamedLayer).  The second is by using a UserStyle (as a top-level element) with one or more FeatureTypeStyles, each of which explicitly specifies a FeatureTypeName indicating the collection that that FeatureTypeStyle is for.  Either way, all referenced collections must exist and be of the compatible type.  If this style already exists, its definition will get updated on the server.  Otherwise it will get created on the server.",
                    "content": {
                        "application/vnd.ogc.sld+xml; version=1.1": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/vnd.ogc.sld+xml; version=1.0": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The resource has been updated, created or validated."
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Styles"
                ],
                "summary": "Remove a style from this data store.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource has been deleted."
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/styles/{styleId}/legend": {
            "get": {
                "tags": [
                    "Styles"
                ],
                "summary": "A legend image showing a graphical representation of the specified style, broken down by each of the collections that it's capable of rendering.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/textcolor"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/legend"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/map": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A map layer consisting of one or more collections.",
                "parameters": [
                    {
                        "name": "geodata",
                        "in": "query",
                        "description": "A comma-separated list of collection identifiers indicating the collections to be rendered.  Each of the specified collections must be renderable in the specified style.  The leftmost collection in the list will be rendered bottommost, the next one over that, and so on.  In the absence of a geodata parameter, all of the collections that are renderable in specified style are rendered, in the order that the server deems most appropriate.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "AgricultureSrf",
                                    "CulturePnt",
                                    "CultureSrf",
                                    "Daraa_DTED",
                                    "Daraa_mosaic_2019",
                                    "FacilityPnt",
                                    "HydrographyCrv",
                                    "HydrographySrf",
                                    "MilitarySrf",
                                    "SettlementSrf",
                                    "StructurePnt",
                                    "TransportationGroundCrv",
                                    "UtilityInfrastructureCrv",
                                    "UtilityInfrastructurePnt",
                                    "VegetationSrf"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store.  If no geodata parameter is present, all of the collections that are renderable in this style are rendered in this style.  If a geodata parameter is present, all of the specified collections must be renderable in the specified style.  If no styleId parameter is present, the default style of each of the specified collections (or of all mappable collections in the absence of a geodata parameter) will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/map-crs"
                    },
                    {
                        "$ref": "#/components/parameters/map-bbox"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 8000
                        },
                        "example": 640
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 6000
                        },
                        "example": 480
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapImage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/map/legend": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A legend image showing a graphical representation of one or more collections as they would appear in the corresponding map.",
                "parameters": [
                    {
                        "name": "geodata",
                        "in": "query",
                        "description": "A comma-separated list of collection identifiers indicating the collections to be rendered.  Each of the specified collections must be renderable in the specified style.  The leftmost collection in the list will be rendered bottommost, the next one over that, and so on.  In the absence of a geodata parameter, all of the collections that are renderable in specified style are rendered, in the order that the server deems most appropriate.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "AgricultureSrf",
                                    "CulturePnt",
                                    "CultureSrf",
                                    "Daraa_DTED",
                                    "Daraa_mosaic_2019",
                                    "FacilityPnt",
                                    "HydrographyCrv",
                                    "HydrographySrf",
                                    "MilitarySrf",
                                    "SettlementSrf",
                                    "StructurePnt",
                                    "TransportationGroundCrv",
                                    "UtilityInfrastructureCrv",
                                    "UtilityInfrastructurePnt",
                                    "VegetationSrf"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store.  If no geodata parameter is present, all of the collections that are renderable in this style are rendered in this style.  If a geodata parameter is present, all of the specified collections must be renderable in the specified style.  If no styleId parameter is present, the default style of each of the specified collections (or of all mappable collections in the absence of a geodata parameter) will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/textcolor"
                    },
                    {
                        "$ref": "#/components/parameters/scale"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/legend"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/styles/{styleId}/map": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A map layer consisting of one or more collections in the specified style.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.  If no geodata parameter is present, all of the collections that are renderable in this style are rendered in this style.  If a geodata parameter is present, all of the specified collections must be renderable in the specified style.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "geodata",
                        "in": "query",
                        "description": "A comma-separated list of collection identifiers indicating the collections to be rendered.  Each of the specified collections must be renderable in the specified style.  The leftmost collection in the list will be rendered bottommost, the next one over that, and so on.  In the absence of a geodata parameter, all of the collections that are renderable in specified style are rendered, in the order that the server deems most appropriate.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "AgricultureSrf",
                                    "CulturePnt",
                                    "CultureSrf",
                                    "Daraa_DTED",
                                    "Daraa_mosaic_2019",
                                    "FacilityPnt",
                                    "HydrographyCrv",
                                    "HydrographySrf",
                                    "MilitarySrf",
                                    "SettlementSrf",
                                    "StructurePnt",
                                    "TransportationGroundCrv",
                                    "UtilityInfrastructureCrv",
                                    "UtilityInfrastructurePnt",
                                    "VegetationSrf"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "$ref": "#/components/parameters/map-crs"
                    },
                    {
                        "$ref": "#/components/parameters/map-bbox"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 8000
                        },
                        "example": 640
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 6000
                        },
                        "example": 480
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapImage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/styles/{styleId}/map/legend": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A legend image showing a graphical representation of one or more collections as they would appear in the corresponding map in the specified style.",
                "parameters": [
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.  If no geodata parameter is present, all of the collections that are renderable in this style are rendered in this style.  If a geodata parameter is present, all of the specified collections must be renderable in the specified style.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "geodata",
                        "in": "query",
                        "description": "A comma-separated list of collection identifiers indicating the collections to be rendered.  Each of the specified collections must be renderable in the specified style.  The leftmost collection in the list will be rendered bottommost, the next one over that, and so on.  In the absence of a geodata parameter, all of the collections that are renderable in specified style are rendered, in the order that the server deems most appropriate.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "AgricultureSrf",
                                    "CulturePnt",
                                    "CultureSrf",
                                    "Daraa_DTED",
                                    "Daraa_mosaic_2019",
                                    "FacilityPnt",
                                    "HydrographyCrv",
                                    "HydrographySrf",
                                    "MilitarySrf",
                                    "SettlementSrf",
                                    "StructurePnt",
                                    "TransportationGroundCrv",
                                    "UtilityInfrastructureCrv",
                                    "UtilityInfrastructurePnt",
                                    "VegetationSrf"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/textcolor"
                    },
                    {
                        "$ref": "#/components/parameters/scale"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/legend"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A map layer of the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/map-crs"
                    },
                    {
                        "$ref": "#/components/parameters/map-bbox"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 8000
                        },
                        "example": 640
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 6000
                        },
                        "example": 480
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapImage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map/legend": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A legend image showing a graphical representation of the specified collection as it would appear in the corresponding map.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/textcolor"
                    },
                    {
                        "$ref": "#/components/parameters/scale"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/legend"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles": {
            "get": {
                "tags": [
                    "Styles"
                ],
                "summary": "The set of styles available for the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonSldHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/styles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}": {
            "get": {
                "tags": [
                    "Styles"
                ],
                "summary": "A style as it pertains to the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-style"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/style"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            },
            "put": {
                "tags": [
                    "Styles"
                ],
                "summary": "Add or update a style for the specified collection, or just validate a style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/validateStylePut"
                    }
                ],
                "requestBody": {
                    "description": "The definition of a style for this collection.  This can by a full StyledLayerDescriptor (with a single NamedLayer with a single UserStyle) or just a UserStyle.  If the UserStyle name/ID is present, it must match the style ID specified in the URL.",
                    "content": {
                        "application/vnd.ogc.sld+xml; version=1.1": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/vnd.ogc.sld+xml; version=1.0": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201"
                    },
                    "204": {
                        "description": "The resource has been updated (or validated)."
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Styles"
                ],
                "summary": "Remove a style from the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource has been deleted."
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A map layer of the specified collection in the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/map-crs"
                    },
                    {
                        "$ref": "#/components/parameters/map-bbox"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 8000
                        },
                        "example": 640
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height (in pixels) of the map.  If unspecified, a reasonable default will be used.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 6000
                        },
                        "example": 480
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapImage"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map/legend": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "A legend image showing a graphical representation of the specified collection as it would appear in the corresponding map in the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "$ref": "#/components/parameters/textcolor"
                    },
                    {
                        "$ref": "#/components/parameters/scale"
                    },
                    {
                        "$ref": "#/components/parameters/pixelSize"
                    },
                    {
                        "$ref": "#/components/parameters/f-mapImage"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/legend"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/tileMatrixSets": {
            "get": {
                "tags": [
                    "Tile-Matrix Sets"
                ],
                "summary": "The tile-matrix sets available in this data store.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileMatrixSets"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/tileMatrixSets/{tileMatrixSetId}": {
            "get": {
                "tags": [
                    "Tile-Matrix Sets"
                ],
                "summary": "A tile-matrix set in this data store.",
                "parameters": [
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileMatrixSet"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/tiles": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A metadata document describing the data tilesets that are available for the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tiles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/tiles/{tileMatrixSetId}": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A metadata document describing the data tiles that are available for the specified collection in the specified tile-matrix set.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A data tile of the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "$ref": "#/components/parameters/tileRow"
                    },
                    {
                        "$ref": "#/components/parameters/tileCol"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  A value of \"wkb\" (content type \"application/x-cubewerx-wkb\") indicates CubeWerx's raster extension to the Well-Known-Binary format.  \"mvt\" and \"geojson\" can only be requested for feature collections, and \"tiff\" and \"wkb\" can only be requested for coverage collections.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mvt",
                                "geojson",
                                "tiff",
                                "wkb"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/dataTile"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/tiles": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A metadata document describing the data tilesets that are available for the specified collection, filtered by the scale rules and conditions of the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tiles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/tiles/{tileMatrixSetId}": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A metadata document describing the data tiles that are available for the specified collection, filtered by the scale rules and conditions of the specified style, in the specified tile-matrix set.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}": {
            "get": {
                "tags": [
                    "Data Tiles"
                ],
                "summary": "A data tile of the specified collection, filtered by the scale rules and conditions of the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "$ref": "#/components/parameters/tileRow"
                    },
                    {
                        "$ref": "#/components/parameters/tileCol"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  \"mvt\" and \"geojson\" can only be requested for feature collections.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "mvt",
                                "geojson"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/dataTile"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map/tiles": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A metadata document describing the map tilesets that are available for the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tiles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map/tiles/{tileMatrixSetId}": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A metadata document describing the map tiles that are available for the specified collection in the specified tile-matrix set.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/legend": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A legend image showing a graphical representation of the specified collection as it would appear in the corresponding map tiles of the specified zoom level.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A map tile of the specified collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "$ref": "#/components/parameters/tileRow"
                    },
                    {
                        "$ref": "#/components/parameters/tileCol"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  A value of \"jop\" (content type \"image/x-jpegorpng\") indicates that either JPEG or PNG should be returned, whichever the server deems to be most appropriate for this tile.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "jop",
                                "png",
                                "tiff",
                                "gif",
                                "jpeg",
                                "mvt"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapTile"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map/tiles": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A metadata document describing the map tiles that are available for the specified collection in the specified style.  (Note: The output of this endpoint is likely changing.)",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tiles"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map/tiles/{tileMatrixSetId}": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A metadata document describing the map tiles that are available for the specified collection in the specified tile-matrix set in the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/legend": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A legend image showing a graphical representation of the specified collection as it would appear in the corresponding map tiles of the specified zoom level in the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "$ref": "#/components/parameters/f-jsonHtml"
                    },
                    {
                        "$ref": "#/components/parameters/pretty"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/tileset"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        },
        "/collections/{collectionId}/styles/{styleId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}": {
            "get": {
                "tags": [
                    "Map Tiles"
                ],
                "summary": "A map tile of the specified collection in the specified style.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "in": "path",
                        "description": "The identifier of a collection in this data store.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AgricultureSrf",
                                "CulturePnt",
                                "CultureSrf",
                                "Daraa_DTED",
                                "Daraa_mosaic_2019",
                                "FacilityPnt",
                                "HydrographyCrv",
                                "HydrographySrf",
                                "MilitarySrf",
                                "SettlementSrf",
                                "StructurePnt",
                                "TransportationGroundCrv",
                                "UtilityInfrastructureCrv",
                                "UtilityInfrastructurePnt",
                                "VegetationSrf"
                            ]
                        }
                    },
                    {
                        "name": "styleId",
                        "in": "path",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "tileMatrixSetId",
                        "in": "path",
                        "description": "The identifier of a tile-matrix set that this collection is available in.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "wgs84",
                                "3395",
                                "smerc"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/tileMatrix"
                    },
                    {
                        "$ref": "#/components/parameters/tileRow"
                    },
                    {
                        "$ref": "#/components/parameters/tileCol"
                    },
                    {
                        "$ref": "#/components/parameters/datetime"
                    },
                    {
                        "name": "styleId",
                        "in": "query",
                        "description": "The identifier of a style in this data store that's compatible with the specified collection.  If no styleId parameter is present, the default style of the collection will be rendered.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Topographic",
                                "Overlay",
                                "Night",
                                "default"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/transparent"
                    },
                    {
                        "$ref": "#/components/parameters/bgcolor"
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  A value of \"jop\" (content type \"image/x-jpegorpng\") indicates that either JPEG or PNG should be returned, whichever the server deems to be most appropriate for this tile.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "jop",
                                "png",
                                "tiff",
                                "gif",
                                "jpeg",
                                "mvt"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/mapTile"
                    },
                    "4XX": {
                        "$ref": "#/components/responses/4XX"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/5XX"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "collectionInfo-json": {
                "title": "Collection Information Schema (JSON)",
                "description": "This schema defines the JSON metadata resource returned from the /collections/{collectionId} endpoint.",
                "type": "object",
                "required": [
                    "id",
                    "links"
                ],
                "properties": {
                    "id": {
                        "description": "The identifier of the collection.",
                        "type": "string"
                    },
                    "title": {
                        "description": "A human readable title of the collection.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the members of the collection.",
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    },
                    "extent": {
                        "$ref": "#/components/schemas/extent-json"
                    },
                    "itemType": {
                        "description": "An indicator about the type of the items in the collection.",
                        "type": "string",
                        "default": "unknown"
                    },
                    "storageCrs": {
                        "description": "The coordinate reference system that may be used to retrieve features from this collection without the need to apply a CRS transformation.",
                        "type": "string"
                    },
                    "crs": {
                        "description": "The list of coordinate reference systems supported by the API.  The first item is the default coordinate reference system.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                        ],
                        "example": [
                            "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
                            "http://www.opengis.net/def/crs/EPSG/0/4326"
                        ]
                    }
                }
            },
            "collectionInfo-xml": {
                "title": "Collection Information Schema (XML)",
                "description": "This schema defines the XML resource returned from the /collections/{collectionId} endpoint.",
                "type": "object",
                "required": [
                    "Name",
                    "links"
                ],
                "xml": {
                    "name": "Collection"
                },
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Title": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-xml"
                        }
                    },
                    "extent-xml": {
                        "$ref": "#/components/schemas/link-xml"
                    }
                }
            },
            "collections-json": {
                "title": "Collections Schema (JSON)",
                "description": "This schema defines the JSON metadata resource returned from the /collections endpoint.",
                "type": "object",
                "required": [
                    "links",
                    "collections"
                ],
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    },
                    "timeStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "numberMatched": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "numberReturned": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/collectionInfo-json"
                        }
                    }
                }
            },
            "collections-xml": {
                "title": "Collections Schema (JSON)",
                "description": "This schema defines the JSON resource returned from the /collections endpoint.",
                "type": "object",
                "required": [
                    "service",
                    "version",
                    "links",
                    "collections"
                ],
                "xml": {
                    "name": "Collections",
                    "namespace": "http://www.opengis.net/ogcapi-features-1/1.0"
                },
                "properties": {
                    "service": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "version": {
                        "type": "string",
                        "pattern": "(\\d\\.\\d)(\\.\\d)?",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-xml"
                        }
                    },
                    "collections": {
                        "type": "array",
                        "xml": {
                            "name": "Collections",
                            "wrapped": true
                        },
                        "items": {
                            "$ref": "#/components/schemas/collectionInfo-xml"
                        }
                    }
                }
            },
            "conformance-json": {
                "title": "Conformance Classes Schema (JSON)",
                "description": "This schema defines the JSON resource returned from the /conformance endpoint.",
                "type": "object",
                "required": [
                    "conformsTo"
                ],
                "properties": {
                    "conformsTo": {
                        "type": "array",
                        "description": "An array of URLs, where each URL corresponds to a defined OGC Conformance class.  Unrecognized URLs should be ignored.",
                        "items": {
                            "type": "string",
                            "example": "http://www.opengis.net/spec/OAPI_Common/1.0/req/core"
                        }
                    }
                }
            },
            "conformance-xml": {
                "title": "Conformance Classes Schema (XML)",
                "description": "This schema defines the XML resource returned from the /conformance endpoint.",
                "type": "object",
                "required": [
                    "service",
                    "version",
                    "links"
                ],
                "xml": {
                    "name": "ConformsTo",
                    "namespace": "http://www.opengis.net/ogcapi-features-1/1.0"
                },
                "properties": {
                    "service": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "version": {
                        "type": "string",
                        "pattern": "(\\d\\.\\d)(\\.\\d)?",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-xml"
                        }
                    }
                }
            },
            "domainSet-json": {
                "title": "Coverage Domain Set Schema (JSON)",
                "type": "object",
                "properties": {}
            },
            "exception-json": {
                "title": "Exception Schema",
                "description": "JSON schema for exceptions",
                "type": "object"
            },
            "extent-json": {
                "title": "Extent Schema (JSON)",
                "description": "Schema for Extent data structures (JSON).",
                "type": "object",
                "properties": {
                    "spatial": {
                        "type": "object",
                        "properties": {
                            "bbox": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                    "type": "array",
                                    "minItems": 4,
                                    "maxItems": 6,
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "example": [
                                    [
                                        -180,
                                        -90,
                                        180,
                                        90
                                    ]
                                ]
                            },
                            "crs": {
                                "description": "Coordinate reference system of the coordinates in the spatial extent (property `spatial`).  In the Core, only WGS84 longitude/latitude is supported.  Extensions may support additional coordinate reference systems.",
                                "type": "string",
                                "enum": [
                                    "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                                ],
                                "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                            }
                        }
                    },
                    "temporal": {
                        "description": "Begin and end times of the temporal extent.",
                        "type": "object",
                        "properties": {
                            "interval": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "example": [
                                        "2011-11-11T12:22:11Z",
                                        "2012-11-24T12:32:43Z"
                                    ]
                                }
                            },
                            "trs": {
                                "description": "Temporal reference system of the coordinates in the temporal extent (property `temporal`).  In the Core, only the Gregorian calendar is supported.  Extensions may support additional temporal reference systems.",
                                "type": "string",
                                "enum": [
                                    "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"
                                ],
                                "default": "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"
                            }
                        }
                    }
                }
            },
            "extent-xml": {
                "title": "Extent Schema (XML)",
                "description": "Schema for Extent data structures (XML).",
                "type": "object",
                "xml": {
                    "name": "Extent"
                },
                "properties": {
                    "spatialExtents": {
                        "type": "array",
                        "xml": {
                            "name": "SpatialExtent"
                        },
                        "items": {
                            "type": "object",
                            "properties": {
                                "crs": {
                                    "type": "string",
                                    "xml": {
                                        "attribute": true
                                    },
                                    "format": "uri",
                                    "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                                },
                                "dimensions": {
                                    "type": "integer",
                                    "xml": {
                                        "attribute": true
                                    },
                                    "minimum": 2,
                                    "default": 2
                                },
                                "LowerCorner": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "format": "double"
                                    }
                                },
                                "UpperCorner": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "format": "double"
                                    }
                                }
                            }
                        }
                    },
                    "temporalExtents": {
                        "type": "array",
                        "xml": {
                            "name": "TemporalExtent"
                        },
                        "items": {
                            "type": "object",
                            "properties": {
                                "trs": {
                                    "type": "string",
                                    "xml": {
                                        "attribute": true
                                    },
                                    "format": "uri",
                                    "default": "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"
                                },
                                "begin": {
                                    "type": "object",
                                    "properties": {
                                        "inclusive": {
                                            "type": "boolean"
                                        },
                                        "#text": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "end": {
                                    "type": "object",
                                    "properties": {
                                        "inclusive": {
                                            "type": "boolean"
                                        },
                                        "#text": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "html": {
                "title": "HTML Schema",
                "description": "This schema describes HTML documents.",
                "type": "string"
            },
            "landingPage-json": {
                "title": "Landing Page Schema (JSON)",
                "description": "JSON schema for the OGC API - Common landing page.",
                "type": "object",
                "required": [
                    "title",
                    "links"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the API",
                        "type": "string"
                    },
                    "description": {
                        "description": "A textual description of the API",
                        "type": "string"
                    },
                    "attribution": {
                        "description": "An attribution for the API.  It should be short and intended for presentation to a user, for example, in a corner of a map.  Parts of the text can be links to other resources if additional information is needed.  The string can include HTML markup.",
                        "type": "string"
                    },
                    "links": {
                        "description": "Links to the resources exposed through this API.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    }
                },
                "additionalProperties": {
                    "type" : "string"
                }
            },
            "landingPage-xml": {
                "title": "Landing Page Schema (XML)",
                "description": "This schema defines the XML response of the OGC API-Common landing page.",
                "type": "object",
                "required": [
                    "service",
                    "version",
                    "links"
                ],
                "xml": {
                    "name": "LandingPage",
                    "namespace": "http://www.opengis.net/wfs/3.0"
                },
                "properties": {
                    "service": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "version": {
                        "type": "string",
                        "pattern": "(3\\.0)(\\.\\d)?",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-xml"
                        }
                    }
                }
            },
            "link-json": {
                "title": "Link Schema (JSON)",
                "description": "Schema for external references.",
                "type": "object",
                "required": [
                    "href"
                ],
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "rel": {
                        "type": "string"
                    },
                    "hreflang": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "link-xml": {
                "title": "Link Schema (XML)",
                "description": "Schema for external references.",
                "type": "object",
                "required": [
                    "href"
                ],
                "xml": {
                    "name": "link",
                    "namespace": "http://www.w3.org/2005/Atom"
                },
                "properties": {
                    "href": {
                        "type": "string",
                        "format": "url",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "rel": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "type": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "hrefLang": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "title": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "length": {
                        "type": "integer",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "mapInfo": {
                "type": "object",
                "required": [
                    "styles",
                    "links"
                ],
                "properties": {
                    "styles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "id",
                                "links"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/link-json"
                                    }
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    }
                }
            },
            "rangeType-json": {
                "title": "Coverage Range Type Schema (JSON)",
                "type": "object",
                "properties": {}
            },
            "styleSet": {
                "description": "This schema defines the JSON resource returned from the /styles endpoint.",
                "type": "object",
                "required": [
                    "styles"
                ],
                "properties": {
                    "styles": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/styleSetEntry"
                        },
                        "example": [
                            {
                                "id": "night",
                                "title": "Topographic night style",
                                "links": [
                                    {
                                        "href": "https://example.com/api/1.0/styles/night?f=mapbox",
                                        "type": "application/vnd.mapbox.style+json",
                                        "rel": "stylesheet"
                                    },
                                    {
                                        "href": "https://example.com/api/1.0/styles/night?f=sld10",
                                        "type": "application/vnd.ogc.sld+xml;version=1.0",
                                        "rel": "stylesheet"
                                    },
                                    {
                                        "href": "https://example.com/api/1.0/styles/night/metadata?f=json",
                                        "type": "application/json",
                                        "rel": "describedBy"
                                    }
                                ]
                            },
                            {
                                "id": "topographic",
                                "title": "Regular topographic style",
                                "links": [
                                    {
                                        "href": "https://example.com/api/1.0/styles/topographic?f=mapbox",
                                        "type": "application/vnd.mapbox.style+json",
                                        "rel": "stylesheet"
                                    },
                                    {
                                        "href": "https://example.com/api/1.0/styles/topographic?f=sld10",
                                        "type": "application/vnd.ogc.sld+xml;version=1.0",
                                        "rel": "stylesheet"
                                    },
                                    {
                                        "href": "https://example.com/api/1.0/styles/topographic/metadata?f=json",
                                        "type": "application/json",
                                        "rel": "describedBy"
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "styleSetEntry": {
                "type": "object",
                "nullable": true,
                "required": [
                    "id",
                    "links"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "links": {
                        "type": "array",
                        "nullable": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    }
                }
            },
            "theme-json": {
                "title": "Theme Schema (JSON)",
                "description": "This schema defines the JSON metadata resource representing a theme.",
                "type": "object",
                "required": [
                    "id",
                    "themes",
                    "collections"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "themes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/theme-json"
                        }
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/collectionInfo-json"
                        }
                    }
                }
            },
            "themes-json": {
                "title": "Themes Schema (JSON)",
                "description": "This schema defines the JSON metadata resource returned from the /themes endpoint, providing the set of top-level themes and collections.",
                "type": "object",
                "required": [
                    "links",
                    "themes",
                    "collections"
                ],
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    },
                    "themes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/theme-json"
                        }
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/collectionInfo-json"
                        }
                    }
                }
            },
            "tileMatrixSets": {
                "type": "object",
                "required": [
                    "tileMatrixSets"
                ],
                "properties": {
                    "tileMatrixSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        },
                        "example": [
                            {
                                "id": "smerc",
                                "title": "Spherical Mercator Projection",
                                "links": [
                                    {
                                        "href": "https://example.org/tileMatrixSets/smerc",
                                        "rel": "item",
                                        "type": "application/json"
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "tilesInfo": {
                "type": "object",
                "required": [
                    "tileMatrixSetLinks",
                    "links"
                ],
                "properties": {
                    "tileMatrixSetLinks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "tileMatrixSet"
                            ],
                            "properties": {
                                "tileMatrixSet": {
                                    "type": "string"
                                },
                                "tileMatrixSetURI": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    }
                }
            },
            "tileset": {
                "type": "object",
                "required": [
                    "links"
                ],
                "properties": {
                    "tileMatrixSetURI": {
                        "type": "string"
                    },
                    "tileMatrixSetDefinition": {
                        "type": "string"
                    },
                    "wellKnownScaleSet": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string",
                        "enum": [
                            "map",
                            "vector",
                            "coverage"
                        ]
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/link-json"
                        }
                    }
                }
            },
            "tilesets": {
                "type": "object",
                "required": [
                    "tilesets"
                ],
                "properties": {
                    "tilesets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "links"
                            ],
                            "properties": {
                                "tileMatrixSetURI": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "tileMatrixSetDefinition": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "wellKnownScaleSet": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "dataType": {
                                    "type": "string",
                                    "enum": [
                                        "map",
                                        "vector",
                                        "coverage"
                                    ]
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/link-json"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "alphaChannel": {
                "name": "alphaChannel",
                "in": "query",
                "description": "Whether or not the GeoTIFF should include an alpha channel (as apposed to a GDAL NODATA tag) to indicate areas of no data.  The default value depends on the type of the coverage.  For numeric types, the NODATA tag is well-defined and interoperable, and is likely what most coverage clients will expect, so a default value of false will be used.  For color types, however, the NODATA tag is ill-defined and not interoperable, so a default value of true will be used.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        "default"
                    ],
                    "default": "default"
                }
            },
            "bbox-coverage": {
                "name": "bbox",
                "in": "query",
                "description": "Specifies a subset of the coverage using a bounding box.\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (elevation or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Lower left corner, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Upper right corner, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\nreference system is specified by the 'bbox-crs' parameter.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).",
                "required": false,
                "schema": {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 6,
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "style": "form",
                "explode": false
            },
            "bbox-crs": {
                "name": "bbox-crs",
                "in": "query",
                "description": "The coordinate reference system of the specified bbox.",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                }
            },
            "bbox": {
                "name": "bbox",
                "in": "query",
                "description": "Only elements that have a geometry that intersects the bounding box are selected.\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (elevation or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Lower left corner, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Upper right corner, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\nreference system is specified by the 'bbox-crs' parameter.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).\n\nIf an element has multiple spatial geometry properties, it is the decision of the\nserver whether only a single spatial geometry property is used to determine\nthe extent or all relevant geometries.",
                "required": false,
                "schema": {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 6,
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "style": "form",
                "explode": false
            },
            "bgcolor": {
                "name": "bgcolor",
                "in": "query",
                "description": "Hexadecimal red-green-blue color value for the background color.  If not specified, the background color specified by the style (0xFFFFFF by default) will be used.",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "example": "0xFFFFFF"
            },
            "coverageBbox": {
                "name": "bbox",
                "in": "query",
                "description": "Specifies a subset of the coverage using a bounding box (as an alternative to using the subset parameter).\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (elevation or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Lower left corner, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Upper right corner, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\nreference system is specified by the 'bbox-crs' parameter.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).",
                "required": false,
                "schema": {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 6,
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "style": "form",
                "explode": false
            },
            "coverageHeight": {
                "name": "height",
                "in": "query",
                "description": "The number of samples high to scale the requested coverage subset to.  This is an alternative to using the scaleSize parameter.",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "coverageWidth": {
                "name": "width",
                "in": "query",
                "description": "The number of samples wide to scale the requested coverage subset to.  This is an alternative to using the scaleSize parameter.",
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                }
            },
            "datetime": {
                "name": "datetime",
                "in": "query",
                "description": "Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339.  Open intervals are expressed using double-dots.\n\nExamples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly elements that have a temporal property that intersects the value of `datetime` are selected.",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "f-geotiffHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "geotiff",
                        "html"
                    ]
                }
            },
            "f-jsonHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json",
                        "html"
                    ]
                }
            },
            "f-jsonSldHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json",
                        "sld11",
                        "sld10",
                        "html"
                    ]
                }
            },
            "f-jsonXmlHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json",
                        "xml",
                        "html"
                    ]
                }
            },
            "f-mapImage": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  A value of \"jop\" (content type \"image/x-jpegorpng\") indicates that either JPEG or PNG should be returned, whichever the server deems to be most appropriate for this particular image.  A value of \"wkb\" indicates CubeWerx's raster extension to the Well-Known-Binary format.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "jop",
                        "jpeg",
                        "png",
                        "tiff",
                        "gif",
                        "wkb"
                    ]
                }
            },
            "f-sldstyleHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  If \"sld11\" or \"sld10\" is specified, the style is returned as a SymLayerSet with one or more NamedLayers, each of which defines exactly one UserStyle (whose name is the ID of the style being defined), each of which has exactly one FeatureTypeStyle (whose FeatureTypeName is implicitly or explicitly the same as that of the NamedLayer).  If \"sld11style\" or \"sld10style\" is specified, the style is returned as a UserStyle (as a top-level element) with one or more FeatureTypeStyles, each of which explicitly specifies a FeatureTypeName indicating the collection that that FeatureTypeStyle is for.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "sld11",
                        "sld10",
                        "sld11style",
                        "sld10style",
                        "html"
                    ]
                }
            },
            "f-stacHtml": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "stac",
                        "html"
                    ]
                }
            },
            "f-style": {
                "name": "f",
                "in": "query",
                "description": "A token indicating the content type to return.  Overrides the HTTP \"Accept\" header if present.  If \"json\" is specified, a metadata document is returned.  If \"sld11\" or \"sld10\" is specified, the style is returned as a SymLayerSet with one or more NamedLayers, each of which defines exactly one UserStyle (whose name is the ID of the style being defined), each of which has exactly one FeatureTypeStyle (whose FeatureTypeName is implicitly or explicitly the same as that of the NamedLayer).  If \"sld11style\" or \"sld10style\" is specified, the style is returned as a UserStyle (as a top-level element) with one or more FeatureTypeStyles, each of which explicitly specifies a FeatureTypeName indicating the collection that that FeatureTypeStyle is for.",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json",
                        "sld11",
                        "sld10",
                        "sld11style",
                        "sld10style",
                        "html"
                    ]
                }
            },
            "imageId": {
                "name": "imageId",
                "in": "path",
                "description": "The identifier of a source image in this collection.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "map-bbox": {
                "name": "bbox",
                "in": "query",
                "description": "The spatial extent of the map in crs units.  Syntax: \"minx,miny,maxx,maxy\".  If present, the crs parameter must also be present.  If not present, the extent and native coordinate reference system of the thing being mapped will be used.",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    },
                    "minItems": 4,
                    "maxItems": 4
                },
                "style": "form",
                "explode": false,
                "example": [
                    -180,
                    -90,
                    180,
                    90
                ]
            },
            "map-crs": {
                "name": "crs",
                "in": "query",
                "description": "The coordinate reference system of the map.  If present, the bbox parameter must also be present.  If not present, the extent and native coordinate reference system of the thing being mapped will be used.",
                "schema": {
                    "type": "string"
                },
                "example": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
            },
            "pixelSize": {
                "name": "pixelSize",
                "in": "query",
                "description": "The physical linear size of a display pixel in millimetres.  If the display device has non-square pixels, then sqrt(width * height) should be provided.  The pixel units and scale rules in a style definition are with respect to a standardized rendering pixel size of 0.28mm.  Knowledge of the actual pixel size of the display device will allow the renderer to produce a map with the intended look even if the actual pixel size is significantly different from the standardized rendering pixel size.",
                "required": false,
                "schema": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 0.28
                }
            },
            "pretty": {
                "name": "pretty",
                "in": "query",
                "description": "Whether or not the output should be pretty-formatted (with whitespace, etc.).",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "removeFromFilesystem": {
                "name": "removeFromFilesystem",
                "in": "query",
                "description": "Whether or not the source image (and its auxiliary files, if any) should be removed from the filesystem.  Specify as true only if you know that this source image isn't also registered with another collection.  The default value is true if the source image is in the filesystem directory that an HTTP POST request to the images endpoint places source images in, and false otherwise.",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "responseHandler": {
                "name": "responseHandler",
                "in": "query",
                "description": "If this parameter is present, the client will receive an immediate acknowledgement response (with an HTTP status of 202), and the preparation of the coverage will be performed offline.  When the coverage is ready (or if an error occurs), the client will be informed via the specified response handler.  This provides the ability to request a coverage that would normally be too large or take too long to be handled within the confines of an HTTP request.  Currently the only supported response handler scheme is \"mailto:\" (e.g., \"mailto:me@myaddress.com\".",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scale-axes": {
                "name": "scale-axes",
                "in": "query",
                "description": "See Requirement 20 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scale-extent": {
                "name": "scale-extent",
                "in": "query",
                "description": "See Requirement 22 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scale-factor": {
                "name": "scale-factor",
                "in": "query",
                "description": "A scale factor to be applied to all coverage axes.  A value of 1 leaves the coverage unscaled, a value between 0 and 1 scales down (reduces target domain), and a value greater than 1 scales up (enlarges target domain).",
                "required": false,
                "schema": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 1.0
                }
            },
            "scale-size": {
                "name": "scale-size",
                "in": "query",
                "description": "See Requirement 21 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scale": {
                "name": "scale",
                "in": "query",
                "description": "If specified, a legend graphic specific to this scale (expressed as a scale denominator) will be returned.  Otherwise, a possibly-composite image providing a legend graphic for each of the scale ranges defined by the style will be returned.",
                "required": false,
                "schema": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "exclusiveMinimum": true
                }
            },
            "scaleAxes": {
                "name": "scaleAxes",
                "in": "query",
                "description": "See Requirement 20 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scaleExtent": {
                "name": "scaleExtent",
                "in": "query",
                "description": "See Requirement 22 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "scaleFactor": {
                "name": "scaleFactor",
                "in": "query",
                "description": "A scale factor to be applied to all coverage axes.  A value of 1 leaves the coverage unscaled, a value between 0 and 1 scales down (reduces target domain), and a value greater than 1 scales up (enlarges target domain).",
                "required": false,
                "schema": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 1
                }
            },
            "scaleSize": {
                "name": "scaleSize",
                "in": "query",
                "description": "See Requirement 21 of the \"OGC® Web Coverage Service Interface Standard - Scaling Extension\" (OGC 12-039).",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "subset": {
                "name": "subset",
                "in": "query",
                "description": "Specifies a subset of the coverage along one or more axes.  See the \"OGC API - Coverages - Part 1: Core\" specification for a description of the syntax.",
                "style": "form",
                "explode": false,
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "textcolor": {
                "name": "textcolor",
                "in": "query",
                "description": "Hexadecimal red-green-blue color value for the text color.  If not specified, a color that contrasts the background color will be used.",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "example": "0x000000"
            },
            "tileCol": {
                "name": "tileCol",
                "in": "path",
                "description": "The zero-based column index of the tile in the specified tile matrix.",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "tileMatrix": {
                "name": "tileMatrix",
                "in": "path",
                "description": "The identifier of a tile matrix (typically a zoom level) within the specified tile-matrix set.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "tileRow": {
                "name": "tileRow",
                "in": "path",
                "description": "The zero-based row index of the tile in the specified tile matrix.",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "transform": {
                "name": "transform",
                "in": "query",
                "description": "Specifies one or more transformations to apply.  See the CubeWerx Suite product documentation for details.",
                "style": "form",
                "explode": false,
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "transparent": {
                "name": "transparent",
                "in": "query",
                "description": "Whether or not the background of the image should be transparent (when supported by the requested image format).",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": true
                }
            },
            "updateTiles": {
                "name": "updateTiles",
                "in": "query",
                "description": "Whether or not the map tiles should be updated.  Typically this is desired, but if multiple updates to the same collection are being performed serially, it's more efficient to specify updateTiles=false for all but the final update.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": true
                }
            },
            "validate": {
                "name": "validate",
                "in": "query",
                "description": "Whether or not to validate (or only validate) the style.  A value of \"yes\" validates the style before creating it on the server (returning code 201 on successful creation and code 400 if validation fails), a value of \"no\" creates the style without validation (although some validation may still occur), and a value of \"only\" just validates the style without creating it on the server (returning code 204 on successful validation and code 400 if validation fails).",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "only"
                    ]
                },
                "example": "yes"
            },
            "validateStylePost": {
                "name": "validate",
                "in": "query",
                "description": "Whether or not to validate (or only validate) the style.  A value of \"yes\" validates the style before creating it on the server (returning code 201 on successful creation and code 400 if validation fails), a value of \"no\" creates the style without validation (although some validation may still occur), and a value of \"only\" just validates the style without creating it on the server (returning code 204 on successful validation and code 400 if validation fails).",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "only"
                    ]
                },
                "example": "yes"
            },
            "validateStylePut": {
                "name": "validate",
                "in": "query",
                "description": "Whether or not to validate (or only validate) the style.  A value of \"yes\" validates the style before updating or creating it on the server (returning code 201 on successful creation, code 204 on successful update and code 400 if validation fails), a value of \"no\" updates or creates the style without validation (although some validation may still occur), and a value of \"only\" just validates the style without updating or creating it on the server (returning code 204 on successful validation and code 400 if validation fails).",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "only"
                    ]
                },
                "example": "yes"
            }
        },
        "responses": {
            "201": {
                "description": "The resource has been created.",
                "headers": {
                    "Location": {
                        "description": "The URI of the new resource.",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                }
            },
            "4XX": {
                "description": "A client-side error has occurred.",
                "content": {
                    "application/problem+json": {},
                    "text/xml": {},
                    "text/html": {}
                }
            },
            "4xx": {
                "description": "A client-side error has occurred.",
                "content": {
                    "application/json": {},
                    "text/xml": {},
                    "text/html": {}
                }
            },
            "5XX": {
                "description": "A server-side error has occurred.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/exception-json"
                        }
                    },
                    "text/xml": {},
                    "text/html": {}
                }
            },
            "5xx": {
                "description": "A server-side error has occurred.",
                "content": {
                    "application/json": {},
                    "text/xml": {},
                    "text/html": {}
                }
            },
            "collection": {
                "description": "A collection available in this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/collectionInfo-json"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/collectionInfo-xml"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "collections": {
                "description": "The set of collections available in this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/collections-json"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/collections-xml"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "conformance": {
                "description": "The set of OGC API conformance classes that are supported for this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/conformance-json"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/conformance-xml"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "coverage": {
                "description": "A coverage.",
                "content": {
                    "image/geo+tiff": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "dataTile": {
                "description": "A data tile.",
                "content": {
                    "application/vnd.mapbox-vector-tile": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "application/geo+json": {
                        "schema": {
                            "type": "string"
                        }
                    },
                    "image/tiff": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "application/x-cubewerx-wkb": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                }
            },
            "domainSet": {
                "description": "The domain set of a coverage.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/domainSet-json"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "landingPage": {
                "description": "The OGC API landing page for this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/landingPage-json"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/landingPage-xml"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "legend": {
                "description": "A legend graphic.",
                "content": {
                    "image/x-jpegorpng": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/jpeg": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/png": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/tiff": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/gif": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "application/x-cubewerx-wkb": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                }
            },
            "map": {
                "description": "A metadata document describing the map layers and map tiles that are available for the specified collection.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/mapInfo"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "mapImage": {
                "description": "A map image.",
                "content": {
                    "image/x-jpegorpng": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/jpeg": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/png": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/tiff": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/gif": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "application/x-cubewerx-wkb": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                }
            },
            "mapTile": {
                "description": "A map tile.",
                "content": {
                    "image/x-jpegorpng": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/jpeg": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/png": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "image/gif": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "application/x-cubewerx-wkb": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                }
            },
            "rangeType": {
                "description": "The range type of a coverage.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/rangeType-json"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "schema": {
                "description": "The schema of a collection.",
                "content": {
                    "application/schema+json": {},
                    "text/xml": {},
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "sourceImage": {
                "description": "Metadata about a source image of a collection, including links to the actual source image file(s).",
                "content": {
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "sourceImages": {
                "description": "The set of source images of a collection.",
                "content": {
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "style": {
                "description": "A style in this data store.",
                "content": {
                    "application/vnd.ogc.sld+xml; version=1.1": {},
                    "application/vnd.ogc.sld+xml; version=1.0": {},
                    "application/vnd.ogc.sld+xml; version=1.1; styleOnly=true": {},
                    "application/vnd.ogc.sld+xml; version=1.0; styleOnly=true": {},
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "styles": {
                "description": "The set of styles available in this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/styleSet"
                        }
                    },
                    "application/vnd.ogc.sld+xml;version=1.1": {},
                    "application/vnd.ogc.sld+xml;version=1.0": {},
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "themes": {
                "description": "The set of collections available in this data store, organized into a theme hierarchy (see OGC 18-045, section A.6).",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/themes-json"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "tileMatrixSet": {
                "description": "A tile-matrix set.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/tileMatrixSet"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "tileMatrixSets": {
                "description": "The tile-matrix sets available in this data store.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tileMatrixSets"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "tiles": {
                "description": "A metadata document describing available tilesets.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tilesets"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            },
            "tileset": {
                "description": "A description of a tileset.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tileset"
                        }
                    },
                    "text/html": {
                        "schema": {
                            "$ref": "#/components/schemas/html"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "httpBearer": {
                "type": "http",
                "scheme": "Bearer"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://test.cubewerx.com/cubewerx/cubeserv/authorize",
                        "scopes": {
                            "profile": "requests access to the end-user's profile",
                            "email": "requests access to the end-user's e-mail address",
                            "openid": "OpenID Connect scope"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://test.cubewerx.com/cubewerx/cubeserv/token",
                        "scopes": {
                            "profile": "requests access to the end-user's profile",
                            "email": "requests access to the end-user's e-mail address",
                            "openid": "OpenID Connect scope"
                        }
                    },
                    "authorizationCode": {
                        "authorizationUrl": "https://test.cubewerx.com/cubewerx/cubeserv/authorize",
                        "tokenUrl": "https://test.cubewerx.com/cubewerx/cubeserv/token",
                        "scopes": {
                            "profile": "requests access to the end-user's profile",
                            "email": "requests access to the end-user's e-mail address",
                            "openid": "OpenID Connect scope"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://test.cubewerx.com/cubewerx/cubeserv/.well-known/openid-configuration"
            },
            "openIdConnect1": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://www.authenix.eu/.well-known/openid-configuration"
            },
            "cwApiKeyQuery": {
                "type": "apiKey",
                "name": "apiKey",
                "in": "query"
            },
            "cwApiKeyHeader": {
                "type": "apiKey",
                "name": "CubeWerx-API-Key",
                "in": "header"
            },
            "cwAuth": {
                "type": "http",
                "scheme": "CwAuth",
                "x-auth-server": "https://test.cubewerx.com/cubewerx/cwauth",
                "description": "CubeWerx-specific scheme."
            }
        }
    },
    "security": [
        {
            "httpBearer": []
        },
        {
            "oauth2": [
                "profile",
                "email",
                "openid"
            ]
        },
        {
            "openIdConnect": []
        },
        {
            "openIdConnect1": []
        },
        {
            "cwApiKeyQuery": []
        },
        {
            "cwApiKeyHeader": []
        },
        {
            "cwAuth": []
        }
    ]
}
